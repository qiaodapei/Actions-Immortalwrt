name: Build

on:
  workflow_dispatch:
    inputs:
      REPO_URL:
        description: 'OpenWrt source repository branch (e.g., v23.05.4)'
        required: true
        default: 'v23.05.4'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
  DEVICE: x86_64
  UPLOAD_OUTPUT: true

jobs:
  Build-immortalwrt:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 配置
      uses: actions/checkout@master
    
    - name: 配置环境
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq full-upgrade -y
        sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
        libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libpython3-dev libreadline-dev \
        libssl-dev libtool lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply \
        python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig libncurses5-dev libncursesw5-dev \
        texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev openssh-server
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源码
      working-directory: /workdir
      env:
        REPO_BRANCH: ${{ github.event.inputs.REPO_URL }}
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 配置 Feeds
      run: |
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        cd openwrt
        echo 'src-git istore https://github.com/linkease/istore;main' >> feeds.conf.default
        echo 'src-git nas https://github.com/linkease/nas-packages.git;master' >> feeds.conf.default
        echo 'src-git nas_luci https://github.com/linkease/nas-packages-luci.git;main' >> feeds.conf.default
        echo 'src-git helloworld https://github.com/fw876/helloworld.git' >> feeds.conf.default
        echo 'src-git kenzo https://github.com/kenzok8/openwrt-packages' >> feeds.conf.default
        echo 'src-git small https://github.com/kenzok8/small' >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        ./scripts/feeds install -a

    - name: 修改 Lan IP
      run: |
        cd openwrt
        sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
    - name: 下载依赖
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        cd openwrt
        make -j$(nproc)
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 上传输出文件
      uses: actions/upload-artifact@master
      if: env.UPLOAD_OUTPUT == 'true' && !cancelled()
      with:
        name: ${{ env.DEVICE }}--${{ env.FILE_DATE }}
        path: openwrt/bin
        
    - name: 整理输出文件
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
    
    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}--${{ env.FILE_DATE }}"
        artifacts: "openwrt/bin/targets/*/*/*"
        body: |
          # 未测试×
          
          IP: 192.168.2.1 | Password: none

